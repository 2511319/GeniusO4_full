# üöÄ ChartGenius Development Makefile
# –í–µ—Ä—Å–∏—è: 1.1.0-dev

.PHONY: help install start stop restart logs test build clean status

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "üöÄ ChartGenius Development Environment"
	@echo "–í–µ—Ä—Å–∏—è: 1.1.0-dev"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	cd frontend-dev && npm install
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å dev-–æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ development –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	docker-compose -f docker-compose.dev.yml up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
	@echo "üåê Frontend: http://localhost:3001"
	@echo "üîß Backend: http://localhost:8001"
	@echo "ü§ñ Bot: http://localhost:8002"

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å dev-–æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ development –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	docker-compose -f docker-compose.dev.yml down
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"

restart: stop start ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å dev-–æ–∫—Ä—É–∂–µ–Ω–∏–µ

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	docker-compose -f docker-compose.dev.yml logs -f

logs-frontend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	docker-compose -f docker-compose.dev.yml logs -f frontend-dev

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞
	docker-compose -f docker-compose.dev.yml logs -f backend-dev

logs-bot: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞
	docker-compose -f docker-compose.dev.yml logs -f bot-dev

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	cd frontend-dev && npm run test

build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
	cd frontend-dev && npm run build:dev
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	docker-compose -f docker-compose.dev.yml down -v
	docker system prune -f
	cd frontend-dev && rm -rf node_modules/.cache
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å development —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f docker-compose.dev.yml ps

dev-frontend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "üé® –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ dev —Ä–µ–∂–∏–º–µ..."
	cd frontend-dev && npm run dev

dev-backend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥ –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "‚öôÔ∏è –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –≤ dev —Ä–µ–∂–∏–º–µ..."
	cd backend-dev && python -m uvicorn app:app --host 0.0.0.0 --port 8001 --reload

check-ports: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ development:"
	@netstat -an | findstr "3001 8001 8002" || echo "–ü–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã"

switch-to-dev: ## –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –≤–µ—Ç–∫—É development
	@echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–µ—Ç–∫—É development..."
	git checkout development
	git pull origin development
	@echo "‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

version: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é
	@echo "üìã –í–µ—Ä—Å–∏—è development: $(shell cat VERSION)"
	@echo "üåø –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $(shell git branch --show-current)"
	@echo "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(shell pwd)"
