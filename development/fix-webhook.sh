#!/bin/bash
# üîß ChartGenius Bot Webhook Fix Script
# –í–µ—Ä—Å–∏—è: 1.1.0-dev
# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ webhook –Ω–∞—Å—Ç—Ä–æ–µ–∫

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_ID="chartgenius-444017"
REGION="europe-west1"
SERVICE_NAME="chartgenius-bot"
BOT_TOKEN="7279183061:AAERodVAje0VnifJmUJWeq0EM4FxMueXrB0"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "\n${BLUE}================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}================================${NC}\n"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ webhook
check_current_webhook() {
    print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ webhook"
    
    print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook..."
    WEBHOOK_INFO=$(curl -s "https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo")
    
    echo "$WEBHOOK_INFO" | python3 -m json.tool
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º URL
    CURRENT_URL=$(echo "$WEBHOOK_INFO" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['result'].get('url', ''))")
    PENDING_UPDATES=$(echo "$WEBHOOK_INFO" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['result'].get('pending_update_count', 0))")
    LAST_ERROR=$(echo "$WEBHOOK_INFO" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['result'].get('last_error_message', ''))")
    
    if [ -n "$CURRENT_URL" ]; then
        print_info "–¢–µ–∫—É—â–∏–π webhook URL: $CURRENT_URL"
    else
        print_warning "Webhook URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ "$PENDING_UPDATES" -gt 0 ]; then
        print_warning "–û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $PENDING_UPDATES"
    fi
    
    if [ -n "$LAST_ERROR" ]; then
        print_error "–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: $LAST_ERROR"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ webhook
remove_webhook() {
    print_header "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ webhook"
    
    print_info "–£–¥–∞–ª–µ–Ω–∏–µ webhook..."
    RESULT=$(curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/deleteWebhook" \
        -H "Content-Type: application/json" \
        -d '{"drop_pending_updates": true}')
    
    echo "$RESULT" | python3 -m json.tool
    
    SUCCESS=$(echo "$RESULT" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('ok', False))")
    
    if [ "$SUCCESS" = "True" ]; then
        print_success "Webhook —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook"
        exit 1
    fi
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥..."
    sleep 5
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ URL —Å–µ—Ä–≤–∏—Å–∞
get_service_url() {
    print_header "–ü–æ–ª—É—á–µ–Ω–∏–µ URL —Å–µ—Ä–≤–∏—Å–∞"
    
    print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ URL Cloud Run —Å–µ—Ä–≤–∏—Å–∞..."
    SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)" 2>/dev/null)
    
    if [ -z "$SERVICE_URL" ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL —Å–µ—Ä–≤–∏—Å–∞"
        print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–µ—Ä–≤–∏—Å $SERVICE_NAME —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –≤ —Ä–µ–≥–∏–æ–Ω–µ $REGION"
        exit 1
    fi
    
    print_success "URL —Å–µ—Ä–≤–∏—Å–∞: $SERVICE_URL"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º webhook URL
    WEBHOOK_URL="${SERVICE_URL}/webhook"
    print_info "Webhook URL: $WEBHOOK_URL"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
test_service_availability() {
    print_header "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"
    
    # –¢–µ—Å—Ç health check
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check..."
    HEALTH_URL="${SERVICE_URL}/health"
    
    if curl -f -s "$HEALTH_URL" > /dev/null; then
        print_success "Health check –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "Health check –Ω–µ –ø—Ä–æ—à–µ–ª"
        print_warning "–°–µ—Ä–≤–∏—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É webhook? [y/N]: " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    
    # –¢–µ—Å—Ç webhook endpoint
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoint..."
    
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$WEBHOOK_URL" \
        -H "Content-Type: application/json" \
        -d '{"test": "ping"}')
    
    if [ "$HTTP_STATUS" = "200" ] || [ "$HTTP_STATUS" = "400" ] || [ "$HTTP_STATUS" = "405" ]; then
        print_success "Webhook endpoint –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP $HTTP_STATUS)"
    else
        print_warning "Webhook endpoint –≤–µ—Ä–Ω—É–ª HTTP $HTTP_STATUS"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ webhook
set_new_webhook() {
    print_header "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ webhook"
    
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook URL: $WEBHOOK_URL"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π secret token
    SECRET_TOKEN=$(openssl rand -hex 16)
    
    RESULT=$(curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/setWebhook" \
        -H "Content-Type: application/json" \
        -d "{
            \"url\": \"${WEBHOOK_URL}\",
            \"drop_pending_updates\": true,
            \"secret_token\": \"${SECRET_TOKEN}\",
            \"max_connections\": 40,
            \"allowed_updates\": [\"message\", \"callback_query\", \"inline_query\"]
        }")
    
    echo "$RESULT" | python3 -m json.tool
    
    SUCCESS=$(echo "$RESULT" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('ok', False))")
    
    if [ "$SUCCESS" = "True" ]; then
        print_success "Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        print_info "Secret token: $SECRET_TOKEN"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º secret token –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è Cloud Run
        print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        gcloud run services update $SERVICE_NAME \
            --region=$REGION \
            --set-env-vars "WEBHOOK_SECRET=${SECRET_TOKEN}" \
            --quiet
        
        if [ $? -eq 0 ]; then
            print_success "Secret token –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        else
            print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
        fi
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ webhook
verify_webhook() {
    print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ webhook"
    
    print_info "–û–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏..."
    sleep 10
    
    print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook..."
    WEBHOOK_INFO=$(curl -s "https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo")
    
    echo "$WEBHOOK_INFO" | python3 -m json.tool
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    NEW_URL=$(echo "$WEBHOOK_INFO" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['result'].get('url', ''))")
    PENDING_UPDATES=$(echo "$WEBHOOK_INFO" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['result'].get('pending_update_count', 0))")
    
    if [ "$NEW_URL" = "$WEBHOOK_URL" ]; then
        print_success "Webhook URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        print_error "Webhook URL –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É"
        print_info "–û–∂–∏–¥–∞–µ–º—ã–π: $WEBHOOK_URL"
        print_info "–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π: $NEW_URL"
    fi
    
    if [ "$PENDING_UPDATES" -eq 0 ]; then
        print_success "–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
    else
        print_info "–û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $PENDING_UPDATES"
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
send_test_message() {
    print_header "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
    
    TEST_MESSAGE="üîß <b>Webhook –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!</b>

–í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')

‚úÖ Webhook URL –æ–±–Ω–æ–≤–ª–µ–Ω
‚úÖ Secret token —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω  
‚úÖ Pending updates –æ—á–∏—â–µ–Ω—ã
‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∫–æ–º–∞–Ω–¥—ã /start"

    print_info "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É..."
    
    RESULT=$(curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
        -H "Content-Type: application/json" \
        -d "{
            \"chat_id\": \"299820674\",
            \"text\": \"${TEST_MESSAGE}\",
            \"parse_mode\": \"HTML\"
        }")
    
    SUCCESS=$(echo "$RESULT" | python3 -c "import sys, json; data=json.load(sys.stdin); print(data.get('ok', False))")
    
    if [ "$SUCCESS" = "True" ]; then
        print_success "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"
        echo "$RESULT" | python3 -m json.tool
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    clear
    echo -e "${BLUE}"
    echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï TELEGRAM WEBHOOK"
    echo "================================"
    echo -e "${NC}"
    echo -e "${CYAN}–ü—Ä–æ–µ–∫—Ç: $PROJECT_ID${NC}"
    echo -e "${CYAN}–°–µ—Ä–≤–∏—Å: $SERVICE_NAME${NC}"
    echo -e "${CYAN}–†–µ–≥–∏–æ–Ω: $REGION${NC}"
    echo
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —à–∞–≥–∏
    check_current_webhook
    remove_webhook
    get_service_url
    test_service_availability
    set_new_webhook
    verify_webhook
    send_test_message
    
    print_header "üéâ Webhook –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    print_success "–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
    print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start –≤ @Chart_Genius_bot"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'echo -e "\n${YELLOW}–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...${NC}"; exit 0' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
