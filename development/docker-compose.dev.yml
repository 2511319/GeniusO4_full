# üöÄ DEVELOPMENT ENVIRONMENT DOCKER COMPOSE
# –í–µ—Ä—Å–∏—è: 1.1.0-dev
# –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ä–µ–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

version: '3.8'

services:
  frontend-dev:
    build: 
      context: ./frontend-dev
      dockerfile: Dockerfile
    container_name: chartgenius-frontend-dev
    ports:
      - "3001:3000"  # –û—Ç–ª–∏—á–Ω—ã–π –æ—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ø–æ—Ä—Ç
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8001
      - VITE_BOT_USERNAME=Chart_Genius_bot
      - VITE_VERSION=1.1.0-dev
      - VITE_ENVIRONMENT=development
    volumes:
      - ./frontend-dev/src:/app/src:ro  # –î–ª—è hot reload
    networks:
      - dev-network
    restart: unless-stopped
    labels:
      - "traefik.enable=false"  # –û—Ç–∫–ª—é—á–∞–µ–º traefik –¥–ª—è dev
      - "environment=development"
      - "version=1.1.0-dev"

  backend-dev:
    build:
      context: ./backend-dev
      dockerfile: Dockerfile
    container_name: chartgenius-backend-dev
    ports:
      - "8001:8000"  # –û—Ç–ª–∏—á–Ω—ã–π –æ—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ø–æ—Ä—Ç
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - VERSION=1.1.0-dev
      - CORS_ORIGINS=http://localhost:3001,http://127.0.0.1:3001
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis-dev:6379/0
      - GOOGLE_CLOUD_STORAGE_BUCKET=chartgenius-prompts-dev
    env_file:
      - .env.development
    volumes:
      - ./backend-dev:/app:ro  # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      - ./logs:/app/logs  # –õ–æ–≥–∏
    networks:
      - dev-network
    depends_on:
      - redis-dev
    restart: unless-stopped
    labels:
      - "environment=development"
      - "version=1.1.0-dev"

  # Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—á–µ—Ä–µ–¥–µ–π
  redis-dev:
    image: redis:7-alpine
    container_name: chartgenius-redis-dev
    ports:
      - "6380:6379"  # –û—Ç–ª–∏—á–Ω—ã–π –æ—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ø–æ—Ä—Ç
    volumes:
      - redis-dev-data:/data
    networks:
      - dev-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    labels:
      - "environment=development"
      - "version=1.1.0-dev"

  # Celery Worker –¥–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
  celery-worker-dev:
    build:
      context: ./backend-dev
      dockerfile: Dockerfile
    container_name: chartgenius-celery-dev
    command: celery -A backend.services.task_service worker --loglevel=info --concurrency=2
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - VERSION=1.1.0-dev
      - REDIS_URL=redis://redis-dev:6379/0
      - GOOGLE_CLOUD_STORAGE_BUCKET=chartgenius-prompts-dev
    env_file:
      - .env.development
    volumes:
      - ./backend-dev:/app:ro
      - ./logs:/app/logs
    networks:
      - dev-network
    depends_on:
      - redis-dev
    restart: unless-stopped
    labels:
      - "environment=development"
      - "version=1.1.0-dev"

  bot-dev:
    build: 
      context: ./bot-dev
      dockerfile: Dockerfile
    container_name: chartgenius-bot-dev
    ports:
      - "8002:8000"  # –û—Ç–ª–∏—á–Ω—ã–π –æ—Ç –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ø–æ—Ä—Ç
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - VERSION=1.1.0-dev
      - BACKEND_URL=http://backend-dev:8000
    env_file:
      - .env.development
    volumes:
      - ./bot-dev:/app:ro  # –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      - ./logs:/app/logs  # –õ–æ–≥–∏
    networks:
      - dev-network
    depends_on:
      - backend-dev
    restart: unless-stopped
    labels:
      - "environment=development"
      - "version=1.1.0-dev"

networks:
  dev-network:
    driver: bridge
    name: chartgenius-dev-network

volumes:
  dev-logs:
    name: chartgenius-dev-logs
  redis-dev-data:
    name: chartgenius-redis-dev-data
