#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ GeniusO4
"""
import subprocess
import sys
import os
import time
import signal
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –ø–∞–∫–µ—Ç—ã –¥–ª—è backend
    try:
        import fastapi
        import uvicorn
        import sqlmodel
        print("‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {e}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r backend/requirements.txt")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js –¥–ª—è frontend
    try:
        result = subprocess.run(['npm', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    except FileNotFoundError:
        print("‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    return True

def install_frontend_deps():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ frontend"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend...")
    try:
        os.chdir('frontend')
        result = subprocess.run(['npm', 'install'], check=True)
        os.chdir('..')
        print("‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        os.chdir('..')
        return False

def start_backend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç backend —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Backend API –Ω–∞ http://localhost:8000")
    env = os.environ.copy()
    env['PYTHONPATH'] = str(Path.cwd() / 'backend')
    
    return subprocess.Popen([
        sys.executable, '-m', 'uvicorn', 
        'backend.app:app', 
        '--reload', 
        '--host', '0.0.0.0', 
        '--port', '8000',
        '--env-file', '.env.dev'
    ], env=env)

def start_frontend():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç frontend —Å–µ—Ä–≤–µ—Ä"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Frontend –Ω–∞ http://localhost:5173")
    os.chdir('frontend')
    process = subprocess.Popen(['npm', 'run', 'dev'])
    os.chdir('..')
    return process

def start_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram Bot...")
    env = os.environ.copy()
    env.update({
        'TELEGRAM_BOT_TOKEN': '7279183061:AAERodVAje0VnifJmUJWeq0EM4FxMueXrB0',
        'JWT_SECRET_KEY': '34sSDF542rf65EJ1kj',
        'API_URL': 'http://localhost:8000',
        'WEBAPP_URL': 'http://localhost:5173'
    })
    
    return subprocess.Popen([
        sys.executable, 'bot/bot.py'
    ], env=env)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üü© GeniusO4 - –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ üü©")
    print("=" * 50)
    
    if not check_dependencies():
        sys.exit(1)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if not Path('frontend/node_modules').exists():
        if not install_frontend_deps():
            sys.exit(1)
    
    processes = []
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º backend
        backend_process = start_backend()
        processes.append(('Backend', backend_process))
        time.sleep(3)  # –î–∞–µ–º –≤—Ä–µ–º—è backend'—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º frontend
        frontend_process = start_frontend()
        processes.append(('Frontend', frontend_process))
        time.sleep(2)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot_process = start_bot()
        processes.append(('Bot', bot_process))
        
        print("\n" + "=" * 50)
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        print("üìä Frontend: http://localhost:5173")
        print("üîß Backend API: http://localhost:8000")
        print("üìö API Docs: http://localhost:8000/docs")
        print("ü§ñ Telegram Bot: @Chart_Genius_bot")
        print("\nüí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤")
        print("=" * 50)
        
        # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        while True:
            time.sleep(1)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ –∂–∏–≤—ã
            for name, process in processes:
                if process.poll() is not None:
                    print(f"‚ö†Ô∏è  {name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ")
    
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        print("üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        for name, process in processes:
            if process.poll() is None:
                print(f"   –û—Å—Ç–∞–Ω–æ–≤–∫–∞ {name}...")
                process.terminate()
                try:
                    process.wait(timeout=5)
                except subprocess.TimeoutExpired:
                    process.kill()
        
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == "__main__":
    main()
