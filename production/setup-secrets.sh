#!/usr/bin/env bash
# production/setup-secrets.sh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ Google Cloud Secret Manager

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    if [ -z "$GCP_PROJECT_ID" ]; then
        log_error "GCP_PROJECT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    log_info "–ü—Ä–æ–µ–∫—Ç: $GCP_PROJECT_ID"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ gcloud
check_gcloud() {
    if ! command -v gcloud &> /dev/null; then
        log_error "Google Cloud CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    gcloud config set project $GCP_PROJECT_ID
    log_success "Google Cloud CLI –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –í–∫–ª—é—á–µ–Ω–∏–µ Secret Manager API
enable_api() {
    log_info "–í–∫–ª—é—á–µ–Ω–∏–µ Secret Manager API..."
    gcloud services enable secretmanager.googleapis.com
    log_success "Secret Manager API –≤–∫–ª—é—á–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞
create_secret() {
    local secret_name=$1
    local description=$2
    
    if gcloud secrets describe $secret_name &> /dev/null; then
        log_warning "–°–µ–∫—Ä–µ—Ç $secret_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    fi
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞: $secret_name"
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞
    echo -n "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è $secret_name ($description): "
    read -s secret_value
    echo
    
    if [ -z "$secret_value" ]; then
        log_error "–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç
    echo "$secret_value" | gcloud secrets create $secret_name --data-file=-
    log_success "–°–µ–∫—Ä–µ—Ç $secret_name —Å–æ–∑–¥–∞–Ω"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT –∫–ª—é—á–∞
generate_jwt_key() {
    local secret_name="jwt-secret-key"
    
    if gcloud secrets describe $secret_name &> /dev/null; then
        log_warning "–°–µ–∫—Ä–µ—Ç $secret_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    fi
    
    log_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ openssl
    if command -v openssl &> /dev/null; then
        jwt_key=$(openssl rand -base64 32)
        echo "$jwt_key" | gcloud secrets create $secret_name --data-file=-
        log_success "JWT –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
    else
        log_warning "OpenSSL –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∫–ª—é—á –≤—Ä—É—á–Ω—É—é"
        create_secret $secret_name "JWT —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–º–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞)"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
setup_secrets() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –¥–ª—è ChartGenius..."
    
    # OpenAI API Key
    create_secret "openai-api-key" "OpenAI API –∫–ª—é—á (sk-...)"
    
    # JWT Secret Key (–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    generate_jwt_key
    
    # CryptoCompare API Key
    create_secret "cryptocompare-api-key" "CryptoCompare API –∫–ª—é—á"
    
    # Telegram Bot Token
    create_secret "telegram-bot-token" "Telegram Bot —Ç–æ–∫–µ–Ω (–ø–æ–ª—É—á–µ–Ω –æ—Ç @BotFather)"
    
    log_success "–í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤
verify_secrets() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤..."
    
    secrets=("openai-api-key" "jwt-secret-key" "cryptocompare-api-key" "telegram-bot-token")
    
    for secret in "${secrets[@]}"; do
        if gcloud secrets describe $secret &> /dev/null; then
            log_success "‚úì $secret"
        else
            log_error "‚úó $secret - –ù–ï –ù–ê–ô–î–ï–ù"
        fi
    done
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ IAM —Ä–æ–ª–µ–π
setup_iam() {
    log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ IAM —Ä–æ–ª–µ–π –¥–ª—è Cloud Run..."
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
    project_number=$(gcloud projects describe $GCP_PROJECT_ID --format="value(projectNumber)")
    
    # –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Cloud Run –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    service_account="$project_number-compute@developer.gserviceaccount.com"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å Secret Manager Secret Accessor
    gcloud projects add-iam-policy-binding $GCP_PROJECT_ID \
        --member="serviceAccount:$service_account" \
        --role="roles/secretmanager.secretAccessor" \
        --quiet
    
    log_success "IAM —Ä–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
show_instructions() {
    log_info "–°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
    echo
    log_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ API –∫–ª—é—á–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: ./deploy-production.sh"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    echo
    log_info "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "gcloud secrets list"
    echo
    log_warning "–í–ê–ñ–ù–û: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã —á–µ—Ä–µ–∑ –Ω–µ–∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã!"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤ ChartGenius –¥–ª—è Google Cloud"
    echo "=================================================="
    echo
    
    check_env
    check_gcloud
    enable_api
    setup_secrets
    verify_secrets
    setup_iam
    show_instructions
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
