#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Telegram WebApp –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData
"""

import requests
import json
import time
from urllib.parse import quote, unquote

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_URL = "https://chartgenius-api-169129692197.europe-west1.run.app"

def test_webapp_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ WebApp –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ Telegram WebApp")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\n1. –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    try:
        response = requests.post(
            f"{API_URL}/api/auth/webapp-token",
            headers={'Content-Type': 'text/plain'},
            data="",
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 400:
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ")
        else:
            print("   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\n2. –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    try:
        response = requests.post(
            f"{API_URL}/api/auth/webapp-token",
            headers={'Content-Type': 'text/plain'},
            data="invalid_data",
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 401:
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        else:
            print("   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –î–∞–Ω–Ω—ã–µ –±–µ–∑ hash
    print("\n3. –¢–µ—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –±–µ–∑ hash:")
    try:
        test_data = "user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%7D&auth_date=1640995200"
        response = requests.post(
            f"{API_URL}/api/auth/webapp-token",
            headers={'Content-Type': 'text/plain'},
            data=test_data,
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 401:
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª –¥–∞–Ω–Ω—ã–µ –±–µ–∑ hash")
        else:
            print("   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –î–∞–Ω–Ω—ã–µ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º hash
    print("\n4. –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º hash:")
    try:
        test_data = "user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Test%22%7D&auth_date=1640995200&hash=invalid_hash"
        response = requests.post(
            f"{API_URL}/api/auth/webapp-token",
            headers={'Content-Type': 'text/plain'},
            data=test_data,
            timeout=10
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 401:
            print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–∏–ª –¥–∞–Ω–Ω—ã–µ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º hash")
            try:
                error_data = response.json()
                print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {error_data.get('detail', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
            except:
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        else:
            print("   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ API:")
    try:
        response = requests.get(f"{API_URL}/health", timeout=10)
        if response.status_code == 200:
            health_data = response.json()
            print(f"   –í–µ—Ä—Å–∏—è API: {health_data.get('version', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {health_data.get('status', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–æ—Ä–æ–≤—å–µ API")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üìã –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:")
    print("=" * 60)
    print("‚úÖ –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Å—Ç–∞—Ç—É—Å 401 - –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    print("‚ùå –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ç—É—Å—ã 500 - –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    print("‚ö†Ô∏è –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ç—É—Å—ã 400 - –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö")
    
    print("\nüí° –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å –†–ï–ê–õ–¨–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Telegram WebApp")
    print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ Cloud Run –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    print("3. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")

def test_real_scenario():
    """–°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    print("\nüéØ –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ï–ê–õ–¨–ù–û–ì–û –°–¶–ï–ù–ê–†–ò–Ø:")
    print("=" * 60)
    print("1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç WebApp –≤ Telegram")
    print("2. JavaScript –ø–æ–ª—É—á–∞–µ—Ç window.Telegram.WebApp.initData")
    print("3. Frontend –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç initData –Ω–∞ /api/auth/webapp-token")
    print("4. API –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é bot token")
    print("5. –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JWT —Ç–æ–∫–µ–Ω")
    print("6. Frontend —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤ dashboard")
    
    print("\nüîç –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨ –í –†–ï–ê–õ–¨–ù–û–ú –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò:")
    print("- –û—Ç–∫—Ä–æ–π—Ç–µ DevTools –≤ Telegram WebApp")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ console.log —Å initData")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç API (200 = —É—Å–ø–µ—Ö, 401 = –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏)")

if __name__ == "__main__":
    test_webapp_validation()
    test_real_scenario()
