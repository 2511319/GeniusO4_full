import React, { useEffect, useState } from 'react';
import { useDispatch } from 'react-redux';
import { 
  Container, 
  Paper, 
  Typography, 
  Box, 
  Button, 
  Alert,
  CircularProgress 
} from '@mui/material';
import { setToken } from '../store';

export default function Login() {
  const dispatch = useDispatch();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [telegramWebApp, setTelegramWebApp] = useState(null);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram WebApp
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      setTelegramWebApp(tg);
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º WebApp
      tg.ready();
      tg.expand();
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –µ—Å–ª–∏ –µ—Å—Ç—å initData
      if (tg.initData) {
        console.log('üîë –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ Telegram WebApp, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
        handleTelegramAuth(tg.initData);
      }
    }
  }, []);

  const handleTelegramAuth = async (initData) => {
    setLoading(true);
    setError('');

    try {
      console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
      
      const response = await fetch('/api/auth/webapp-token', {
        method: 'POST',
        headers: {
          'Content-Type': 'text/plain',
        },
        body: initData
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.detail || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }

      const data = await response.json();
      console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –ø–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
      dispatch(setToken(data.access_token));
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram WebApp –æ–± —É—Å–ø–µ—Ö–µ
      if (telegramWebApp) {
        telegramWebApp.showAlert('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
      }

    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram WebApp –æ–± –æ—à–∏–±–∫–µ
      if (telegramWebApp) {
        telegramWebApp.showAlert('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + err.message);
      }
    } finally {
      setLoading(false);
    }
  };

  const handleManualAuth = () => {
    if (telegramWebApp && telegramWebApp.initData) {
      handleTelegramAuth(telegramWebApp.initData);
    } else {
      setError('–î–∞–Ω–Ω—ã–µ Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ Telegram.');
    }
  };

  const handleOpenInTelegram = () => {
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å Telegram –±–æ—Ç–∞ –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const telegramBotUrl = "https://t.me/Chart_Genius_bot";

    try {
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
      const opened = window.open(telegramBotUrl, '_blank');

      if (opened) {
        setError('‚úÖ Telegram –æ—Ç–∫—Ä—ã—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤ –±–æ—Ç–µ @Chart_Genius_bot –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
      } else {
        // –ï—Å–ª–∏ popup –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        setError('üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –±–æ—Ç—É @Chart_Genius_bot –≤ Telegram –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start');
      }
    } catch (e) {
      // Fallback –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å
      setError('üì± –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @Chart_Genius_bot, –∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start');
    }
  };

  return (
    <Container maxWidth="sm" sx={{ mt: 4 }}>
      <Paper elevation={3} sx={{ p: 4, textAlign: 'center' }}>
        <Typography variant="h4" component="h1" gutterBottom color="primary">
          ChartGenius
        </Typography>
        
        <Typography variant="h6" gutterBottom sx={{ mb: 3 }}>
          –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤
        </Typography>

        {error && (
          <Alert severity="error" sx={{ mb: 3 }}>
            {error}
          </Alert>
        )}

        <Box sx={{ mb: 3 }}>
          {telegramWebApp ? (
            <Box>
              <Typography variant="body1" sx={{ mb: 2 }}>
                üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram
              </Typography>
              
              {loading ? (
                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2 }}>
                  <CircularProgress size={24} />
                  <Typography>–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...</Typography>
                </Box>
              ) : (
                <Button
                  variant="contained"
                  size="large"
                  onClick={handleManualAuth}
                  disabled={loading}
                  sx={{ minWidth: 200 }}
                >
                  üîë –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
                </Button>
              )}
            </Box>
          ) : (
            <Box>
              <Typography variant="body1" sx={{ mb: 2, color: 'text.secondary' }}>
                –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ChartGenius –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
              </Typography>
              
              <Button
                variant="contained"
                size="large"
                onClick={handleOpenInTelegram}
                sx={{
                  minWidth: 200,
                  background: 'linear-gradient(45deg, #0088cc 30%, #229ED9 90%)',
                  '&:hover': {
                    background: 'linear-gradient(45deg, #006699 30%, #1a7db8 90%)',
                  }
                }}
              >
                üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Telegram
              </Button>
            </Box>
          )}
        </Box>

        <Box sx={{ mt: 4, pt: 3, borderTop: '1px solid', borderColor: 'divider' }}>
          <Typography variant="body2" color="text.secondary">
            üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã<br />
            üéØ –¢–æ—Ä–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏<br />
            üîç –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤
          </Typography>
        </Box>
      </Paper>
    </Container>
  );
}
