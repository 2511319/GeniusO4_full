#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Telegram WebApp
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_URL = "https://chartgenius-api-working-169129692197.europe-west1.run.app"

# –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ù–û–í–´–ï –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤)
REAL_INIT_DATA = "query_id=AAGC5t4RAAAAAILm3hF4OoMR&user=%7B%22id%22%3A299820674%2C%22first_name%22%3A%22%D0%94%D0%B8%D0%BC%D0%B0%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22Dushnar%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2FXV2IBaxMPch2a19AJW5Q2zF3ccAOR6HvE9B7VMzx34k.svg%22%7D&auth_date=1750669916&signature=tWj0BgfvWVmIfUBWlrQGFElyrs68eF1Lp4QUjsU8XMe1iwZDqG4CybLjGXdA7Y0NSU-gBtxsh6GI4GvqQi8JCA&hash=080de3032960cb91f896b86c807e24d60a1bcea7056005584852e9a7f7aeefd5"

def test_real_data():
    """–¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç Telegram WebApp"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ Telegram WebApp")
    print("=" * 60)
    
    print(f"üìã –î–ª–∏–Ω–∞ –¥–∞–Ω–Ω—ã—Ö: {len(REAL_INIT_DATA)}")
    print(f"üìã –î–∞–Ω–Ω—ã–µ: {REAL_INIT_DATA[:100]}...")
    
    try:
        print("\nüîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ API...")
        response = requests.post(
            f"{API_URL}/api/auth/webapp-token",
            headers={
                'Content-Type': 'text/plain',
                'Host': 'chartgenius-api-working-169129692197.europe-west1.run.app',
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
            },
            data=REAL_INIT_DATA,
            timeout=10
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –£–°–ü–ï–•! –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
            try:
                data = response.json()
                print(f"üéâ –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω: {data.get('access_token', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')[:50]}...")
                print(f"‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {data.get('expires_minutes', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} –º–∏–Ω—É—Ç")
            except:
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
        elif response.status_code == 401:
            print("‚ùå –û–®–ò–ë–ö–ê: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
            try:
                error_data = response.json()
                print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {error_data.get('detail', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
            except:
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def analyze_data():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•:")
    print("=" * 60)
    
    from urllib.parse import parse_qsl, unquote
    
    # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
    parsed = dict(parse_qsl(REAL_INIT_DATA))
    
    print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:")
    for key, value in sorted(parsed.items()):
        if key == 'user':
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º JSON –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                import json
                user_data = json.loads(unquote(value))
                print(f"   {key}: {json.dumps(user_data, indent=6, ensure_ascii=False)}")
            except:
                print(f"   {key}: {value[:100]}...")
        else:
            print(f"   {key}: {value}")
    
    print(f"\nüîë Hash: {parsed.get('hash', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}")
    print(f"üìÖ Auth date: {parsed.get('auth_date', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º photo_url
    if 'user' in parsed:
        try:
            user_data = json.loads(unquote(parsed['user']))
            photo_url = user_data.get('photo_url', '')
            if photo_url:
                print(f"\nüñºÔ∏è Photo URL –Ω–∞–π–¥–µ–Ω:")
                print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª: {photo_url}")
                print(f"   –°–æ–¥–µ—Ä–∂–∏—Ç —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–µ—à–∏: {'\\/' in photo_url}")
        except:
            pass

if __name__ == "__main__":
    analyze_data()
    test_real_data()
    
    print("\n" + "=" * 60)
    print("üìù –í–´–í–û–î–´:")
    print("=" * 60)
    print("1. –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200 - –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("2. –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 401 - –Ω—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º")
    print("3. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ photo_url —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ª–µ—à–∞–º–∏")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ bot token –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤ Google Cloud Secrets")
