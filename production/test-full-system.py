#!/usr/bin/env python3
# production/test-full-system.py
# –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã ChartGenius

import requests
import json
import time
from datetime import datetime

# URLs –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
FRONTEND_URL = "https://chartgenius-frontend-169129692197.europe-west1.run.app"
API_URL = "https://chartgenius-api-working-169129692197.europe-west1.run.app"
BOT_URL = "https://chartgenius-bot-working-169129692197.europe-west1.run.app"

# –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram WebApp –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
REAL_INIT_DATA = "query_id=AAGC5t4RAAAAAILm3hF4OoMR&user=%7B%22id%22%3A299820674%2C%22first_name%22%3A%22%D0%94%D0%B8%D0%BC%D0%B0%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22Dushnar%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2FXV2IBaxMPch2a19AJW5Q2zF3ccAOR6HvE9B7VMzx34k.svg%22%7D&auth_date=1750669916&signature=tWj0BgfvWVmIfUBWlrQGFElyrs68eF1Lp4QUjsU8XMe1iwZDqG4CybLjGXdA7Y0NSU-gBtxsh6GI4GvqQi8JCA&hash=080de3032960cb91f896b86c807e24d60a1bcea7056005584852e9a7f7aeefd5"

def test_component(name, url, endpoint="", expected_status=200, timeout=10):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–∏—Å—Ç–µ–º—ã"""
    try:
        print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {name}...")
        full_url = f"{url}{endpoint}"
        
        response = requests.get(full_url, timeout=timeout)
        
        if response.status_code == expected_status:
            print(f"‚úÖ {name}: OK (—Å—Ç–∞—Ç—É—Å {response.status_code})")
            return True, response
        else:
            print(f"‚ùå {name}: –û–®–ò–ë–ö–ê (—Å—Ç–∞—Ç—É—Å {response.status_code})")
            return False, response
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå {name}: –ù–ï–î–û–°–¢–£–ü–ï–ù ({e})")
        return False, None

def test_api_auth():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API"""
    try:
        print(f"üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API...")
        
        response = requests.post(
            f"{API_URL}/api/auth/webapp-token",
            headers={
                'Content-Type': 'text/plain',
                'Host': 'chartgenius-api-working-169129692197.europe-west1.run.app',
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
            },
            data=REAL_INIT_DATA,
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            # API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω –≤ –ø–æ–ª–µ access_token
            token = data.get('access_token', '') or data.get('token', '')
            if token and len(token) > 50:
                print(f"‚úÖ API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: OK (—Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞: {len(token)})")
                return True, token
            else:
                print(f"‚ùå API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –¢–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω")
                print(f"   –û—Ç–≤–µ—Ç: {data}")
                return False, None
        else:
            print(f"‚ùå API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –û–®–ò–ë–ö–ê (—Å—Ç–∞—Ç—É—Å {response.status_code})")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False, None
            
    except Exception as e:
        print(f"‚ùå API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –û–®–ò–ë–ö–ê ({e})")
        return False, None

def test_api_with_token(token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å —Ç–æ–∫–µ–Ω–æ–º"""
    try:
        print(f"üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å —Ç–æ–∫–µ–Ω–æ–º...")
        
        headers = {
            'Authorization': f'Bearer {token}',
            'Content-Type': 'application/json'
        }
        
        # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É endpoint (—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
        response = requests.get(f"{API_URL}/testdata", headers=headers, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get('status') == 'ok':
                print(f"‚úÖ API —Å —Ç–æ–∫–µ–Ω–æ–º: OK (—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã)")
                return True
            else:
                print(f"‚ùå API —Å —Ç–æ–∫–µ–Ω–æ–º: –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç")
                return False
        else:
            print(f"‚ùå API —Å —Ç–æ–∫–µ–Ω–æ–º: –û–®–ò–ë–ö–ê (—Å—Ç–∞—Ç—É—Å {response.status_code})")
            return False
            
    except Exception as e:
        print(f"‚ùå API —Å —Ç–æ–∫–µ–Ω–æ–º: –û–®–ò–ë–ö–ê ({e})")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ CHARTGENIUS")
    print("=" * 60)
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    results = {}
    
    # 1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Frontend
    print("üì± –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FRONTEND")
    print("-" * 30)
    success, response = test_component("Frontend", FRONTEND_URL)
    results['frontend'] = success
    print()
    
    # 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API")
    print("-" * 30)
    success, response = test_component("API Health", API_URL, "/health")
    results['api_health'] = success
    
    success, response = test_component("API Root", API_URL)
    results['api_root'] = success
    print()
    
    # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print("üîê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("-" * 30)
    auth_success, token = test_api_auth()
    results['api_auth'] = auth_success
    
    if auth_success and token:
        token_success = test_api_with_token(token)
        results['api_with_token'] = token_success
    else:
        results['api_with_token'] = False
    print()
    
    # 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞
    print("ü§ñ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê")
    print("-" * 30)
    success, response = test_component("Bot Health", BOT_URL, "/health")
    results['bot_health'] = success
    
    success, response = test_component("Bot Root", BOT_URL)
    results['bot_root'] = success
    
    success, response = test_component("Bot Webhook Info", BOT_URL, "/webhook-info")
    results['bot_webhook'] = success
    print()
    
    # 5. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)
    
    total_tests = len(results)
    passed_tests = sum(results.values())
    
    print(f"üìã –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {total_tests}")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed_tests}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {total_tests - passed_tests}")
    print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {(passed_tests/total_tests)*100:.1f}%")
    print()
    
    print("üîç –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    for test_name, result in results.items():
        status = "‚úÖ PASS" if result else "‚ùå FAIL"
        print(f"   {test_name}: {status}")
    print()
    
    # 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    if passed_tests == total_tests:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("üöÄ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é.")
    elif passed_tests >= total_tests * 0.8:
        print("‚ö†Ô∏è  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–≤–∞–ª–∏–≤—à–∏–µ—Å—è —Ç–µ—Å—Ç—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∫—à–Ω.")
    else:
        print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´! –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞.")
        print("üõ†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞.")
    
    print()
    print("üîó –°–°–´–õ–ö–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò:")
    print(f"   Frontend: {FRONTEND_URL}")
    print(f"   API: {API_URL}")
    print(f"   Bot: {BOT_URL}")
    print()

    print("üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ê–í–ò–ì–ê–¶–ò–ò:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ Frontend –≤ Telegram WebApp")
    print("   2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print("   3. –ù–∞–∂–º–∏—Ç–µ '–ö –∞–Ω–∞–ª–∏–∑—É' –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–Ω–∞–ª–∏–∑–∞")
    print("   5. –ù–∞–∂–º–∏—Ç–µ '–í—ã–π—Ç–∏' –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç")
    print()
    
    return passed_tests == total_tests

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)
