#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ChartGenius
# –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ª–æ–∫–∞–ª—å–Ω–æ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ

set -e

echo "üß™ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ChartGenius"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_requirements() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    if ! command -v python3 &> /dev/null; then
        echo "‚ùå Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    echo "‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
setup_test_env() {
    echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    export LOCAL_TESTING=true
    export JWT_SECRET_KEY="test_jwt_secret_key_for_local_testing_only"
    export TELEGRAM_BOT_TOKEN="test_bot_token"
    export OPENAI_API_KEY="test_openai_key"
    export CRYPTOCOMPARE_API_KEY="test_crypto_key"
    export LLM_PROVIDER="openai"
    export DEFAULT_SYMBOL="BTCUSDT"
    
    echo "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo "üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd backend
    python3 -m pip install -r requirements.txt
    cd ..
    
    # Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo "üì± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    cd frontend
    npm install
    cd ..
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo "üß™ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    python3 -m pip install pytest pytest-asyncio aiohttp
    
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞
start_backend() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ Backend API..."
    
    cd backend
    python3 -m uvicorn app:app --host 0.0.0.0 --port 8000 &
    BACKEND_PID=$!
    cd ..
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Backend..."
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    if curl -s http://localhost:8000/health > /dev/null; then
        echo "‚úÖ Backend API –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"
    else
        echo "‚ùå Backend API –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        kill $BACKEND_PID 2>/dev/null || true
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–µ—Ä–∞
start_frontend() {
    echo "üåê –ó–∞–ø—É—Å–∫ Frontend..."
    
    cd frontend
    VITE_API_URL=http://localhost:8000 npm run dev &
    FRONTEND_PID=$!
    cd ..
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Frontend..."
    sleep 10
    
    echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"
}

# –ó–∞–ø—É—Å–∫ bot —Å–µ—Ä–≤–µ—Ä–∞
start_bot() {
    echo "ü§ñ –ó–∞–ø—É—Å–∫ Telegram Bot..."
    
    cd bot
    API_URL=http://localhost:8000 WEBAPP_URL=http://localhost:5173 python3 bot.py &
    BOT_PID=$!
    cd ..
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Bot..."
    sleep 3
    
    echo "‚úÖ Telegram Bot –∑–∞–ø—É—â–µ–Ω (PID: $BOT_PID)"
}

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
run_tests() {
    echo "üß™ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    export TEST_API_URL=http://localhost:8000
    
    # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 5
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    python3 tests/test_integration.py
    
    echo "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
test_api_endpoints() {
    echo "üì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints..."
    
    # Health check
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."
    if curl -s http://localhost:8000/health | grep -q "ok"; then
        echo "‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Health endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # Telegram auth endpoint
    echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ auth endpoint..."
    auth_response=$(curl -s -X POST http://localhost:8000/auth/telegram \
        -H "Content-Type: application/json" \
        -d '{"id":"123456789","first_name":"Test","username":"test","auth_date":"1640995200","hash":"test"}')
    
    if echo "$auth_response" | grep -q "access_token\|error"; then
        echo "‚úÖ Auth endpoint –æ—Ç–≤–µ—á–∞–µ—Ç"
    else
        echo "‚ùå Auth endpoint –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
    
    # Subscription endpoint
    echo "üí≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ subscription endpoint..."
    if curl -s -H "X-Telegram-Id: 123456789" http://localhost:8000/api/user/subscription | grep -q "level"; then
        echo "‚úÖ Subscription endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå Subscription endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ frontend
test_frontend() {
    echo "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Frontend..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if curl -s http://localhost:5173 > /dev/null; then
        echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º frontend —Ç–µ—Å—Ç—ã
    echo "üß™ –ó–∞–ø—É—Å–∫ Frontend —Ç–µ—Å—Ç–æ–≤..."
    cd frontend
    if npm test -- --watchAll=false > /dev/null 2>&1; then
        echo "‚úÖ Frontend —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏"
    else
        echo "‚ö†Ô∏è Frontend —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã)"
    fi
    cd ..
}

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null || true
        echo "üõë Backend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$FRONTEND_PID" ]; then
        kill $FRONTEND_PID 2>/dev/null || true
        echo "üõë Frontend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$BOT_PID" ]; then
        kill $BOT_PID 2>/dev/null || true
        echo "üõë Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –£–±–∏–≤–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ—Ü–µ—Å—Å—ã
    pkill -f "uvicorn app:app" 2>/dev/null || true
    pkill -f "npm run dev" 2>/dev/null || true
    pkill -f "python3 bot.py" 2>/dev/null || true
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
trap cleanup EXIT INT TERM

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_requirements
    setup_test_env
    install_dependencies
    
    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    start_backend
    start_frontend
    start_bot
    
    echo ""
    echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
    test_api_endpoints
    test_frontend
    run_tests
    
    echo ""
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìã –°–≤–æ–¥–∫–∞:"
    echo "‚Ä¢ Backend API:  http://localhost:8000"
    echo "‚Ä¢ Frontend:     http://localhost:5173"
    echo "‚Ä¢ Bot:          –ó–∞–ø—É—â–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
    echo ""
    echo "üìù –î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5173 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    echo "2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª"
    echo "3. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo ""
    
    # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    echo "‚è≥ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    while true; do
        sleep 1
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
