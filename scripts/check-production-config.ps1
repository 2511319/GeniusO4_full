# scripts/check-production-config.ps1
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É (PowerShell –≤–µ—Ä—Å–∏—è)

Write-Host "üîç –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò CHARTGENIUS –ö –ü–†–û–î–ê–ö–®–ï–ù–£" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan

$Errors = 0
$Warnings = 0

function Write-Error-Custom($message) {
    Write-Host "‚ùå –û–®–ò–ë–ö–ê: $message" -ForegroundColor Red
    $script:Errors++
}

function Write-Warning-Custom($message) {
    Write-Host "‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: $message" -ForegroundColor Yellow
    $script:Warnings++
}

function Write-Success($message) {
    Write-Host "‚úÖ $message" -ForegroundColor Green
}

function Write-Info($message) {
    Write-Host "‚ÑπÔ∏è  $message" -ForegroundColor Blue
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π
Write-Host "`nüìä –ü–†–û–í–ï–†–ö–ê –í–ï–†–°–ò–ô" -ForegroundColor Blue
Write-Host "==================="

$ProdVersion = if (Test-Path "production/VERSION") { Get-Content "production/VERSION" -Raw | ForEach-Object { $_.Trim() } } else { "–ù–ï –ù–ê–ô–î–ï–ù" }
$FrontendVersion = if (Test-Path "frontend/package.json") { 
    (Get-Content "frontend/package.json" | ConvertFrom-Json).version 
} else { "–ù–ï –ù–ê–ô–î–ï–ù" }

$ConfigVersion = if (Test-Path "production/frontend/src/config.js") {
    $content = Get-Content "production/frontend/src/config.js" -Raw
    if ($content -match "APP_VERSION = '([^']+)'") { $matches[1] } else { "–ù–ï –ù–ê–ô–î–ï–ù" }
} else { "–§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù" }

$DevConfigVersion = if (Test-Path "frontend/src/config.js") {
    $content = Get-Content "frontend/src/config.js" -Raw
    if ($content -match "APP_VERSION = '([^']+)'") { $matches[1] } else { "–ù–ï –ù–ê–ô–î–ï–ù" }
} else { "–§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù" }

Write-Host "Production VERSION: $ProdVersion"
Write-Host "Frontend package.json: $FrontendVersion"
Write-Host "Production config.js: $ConfigVersion"
Write-Host "Development config.js: $DevConfigVersion"

if ($ProdVersion -eq $FrontendVersion -and $ProdVersion -eq $ConfigVersion) {
    Write-Success "–í–µ—Ä—Å–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
} else {
    Write-Error-Custom "–í–µ—Ä—Å–∏–∏ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏"
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ API URL
Write-Host "`nüîó –ü–†–û–í–ï–†–ö–ê API URL" -ForegroundColor Blue
Write-Host "==================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ localhost –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö
$LocalhostFound = $false
if (Test-Path "production") {
    Get-ChildItem -Path "production" -Recurse -File | ForEach-Object {
        $content = Get-Content $_.FullName -Raw -ErrorAction SilentlyContinue
        if ($content -match "localhost|127\.0\.0\.1") {
            Write-Host "–ù–∞–π–¥–µ–Ω localhost –≤: $($_.FullName)" -ForegroundColor Red
            $LocalhostFound = $true
        }
    }
}

if ($LocalhostFound) {
    Write-Error-Custom "–ù–∞–π–¥–µ–Ω—ã localhost/127.0.0.1 –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö"
} else {
    Write-Success "localhost –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è API URL –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö
$NginxApiUrl = if (Test-Path "production/frontend/nginx.conf") {
    $content = Get-Content "production/frontend/nginx.conf" -Raw
    if ($content -match "https://[^;]+\.run\.app") { $matches[0] } else { "–ù–ï –ù–ê–ô–î–ï–ù" }
} else { "–§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù" }

$DockerfileApiUrl = if (Test-Path "production/frontend/Dockerfile") {
    $content = Get-Content "production/frontend/Dockerfile" -Raw
    if ($content -match "https://[^`"]+\.run\.app") { $matches[0] } else { "–ù–ï –ù–ê–ô–î–ï–ù" }
} else { "–§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù" }

$ConfigApiUrl = if (Test-Path "production/frontend/src/config.js") {
    $content = Get-Content "production/frontend/src/config.js" -Raw
    if ($content -match "https://[^']+\.run\.app") { $matches[0] } else { "–ù–ï –ù–ê–ô–î–ï–ù" }
} else { "–§–ê–ô–õ –ù–ï –ù–ê–ô–î–ï–ù" }

Write-Host "Nginx API URL: $NginxApiUrl"
Write-Host "Dockerfile API URL: $DockerfileApiUrl"
Write-Host "Config API URL: $ConfigApiUrl"

if ($NginxApiUrl -eq $DockerfileApiUrl -and $NginxApiUrl -eq $ConfigApiUrl -and $NginxApiUrl -ne "–ù–ï –ù–ê–ô–î–ï–ù") {
    Write-Success "API URL —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö"
} else {
    Write-Error-Custom "API URL –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –º–µ–∂–¥—É –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞–º–∏"
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
Write-Host "`nüîê –ü–†–û–í–ï–†–ö–ê –°–ï–ö–†–ï–¢–û–í" -ForegroundColor Blue
Write-Host "==================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –≤ –∫–æ–¥–µ
$RealKeysFound = $false
Get-ChildItem -Recurse -File -Exclude "*.md" | Where-Object { 
    $_.DirectoryName -notmatch "node_modules|\.git" 
} | ForEach-Object {
    $content = Get-Content $_.FullName -Raw -ErrorAction SilentlyContinue
    if ($content -match "sk-[a-zA-Z0-9]{20,}" -and $content -notmatch "your-|example") {
        Write-Host "–ù–∞–π–¥–µ–Ω –≤–æ–∑–º–æ–∂–Ω—ã–π —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á –≤: $($_.FullName)" -ForegroundColor Red
        $RealKeysFound = $true
    }
}

if ($RealKeysFound) {
    Write-Error-Custom "–ù–∞–π–¥–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ–∞–ª—å–Ω—ã–µ API –∫–ª—é—á–∏ –≤ –∫–æ–¥–µ"
} else {
    Write-Success "–†–µ–∞–ª—å–Ω—ã–µ API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–¥–µ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram —Ç–æ–∫–µ–Ω–∞ –≤ setup-secrets.ps1
if (Test-Path "production/setup-secrets.ps1") {
    $content = Get-Content "production/setup-secrets.ps1" -Raw
    if ($content -match "REAL_TOKEN_PATTERN_REMOVED:") {
        Write-Error-Custom "–ù–∞–π–¥–µ–Ω —Ä–µ–∞–ª—å–Ω—ã–π Telegram —Ç–æ–∫–µ–Ω –≤ setup-secrets.ps1"
    } else {
        Write-Success "–†–µ–∞–ª—å–Ω—ã–π Telegram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∫—Ä–∏–ø—Ç–∞—Ö"
    }
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–æ–≤ –æ—Ç–ª–∞–¥–∫–∏
Write-Host "`nüêõ –ü–†–û–í–ï–†–ö–ê –†–ï–ñ–ò–ú–û–í –û–¢–õ–ê–î–ö–ò" -ForegroundColor Blue
Write-Host "============================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DEBUG –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if (Test-Path "production/backend/config/production.py") {
    $content = Get-Content "production/backend/config/production.py" -Raw
    if ($content -match "DEBUG = False") {
        Write-Success "DEBUG –æ—Ç–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–Ω backend"
    } else {
        Write-Error-Custom "DEBUG –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–Ω backend"
    }
}

if (Test-Path "production/frontend/src/config.js") {
    $content = Get-Content "production/frontend/src/config.js" -Raw
    if ($content -match "DEBUG = false") {
        Write-Success "DEBUG –æ—Ç–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–Ω frontend"
    } else {
        Write-Warning-Custom "DEBUG –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–¥–∞–∫—à–Ω frontend"
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ console.log –≤ –ø—Ä–æ–¥–∞–∫—à–Ω
$ConsoleLogFound = $false
if (Test-Path "production") {
    Get-ChildItem -Path "production" -Recurse -File -Include "*.js" | ForEach-Object {
        $content = Get-Content $_.FullName -Raw -ErrorAction SilentlyContinue
        if ($content -match "console\.log") {
            $ConsoleLogFound = $true
        }
    }
}

if ($ConsoleLogFound) {
    Write-Warning-Custom "–ù–∞–π–¥–µ–Ω—ã console.log –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö"
} else {
    Write-Success "console.log –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ–¥–∞–∫—à–Ω —Ñ–∞–π–ª–∞—Ö"
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤
Write-Host "`nüê≥ –ü–†–û–í–ï–†–ö–ê DOCKER –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò" -ForegroundColor Blue
Write-Host "================================="

$DockerFiles = @("production/backend/Dockerfile", "production/frontend/Dockerfile", "production/bot/Dockerfile")

foreach ($dockerfile in $DockerFiles) {
    if (Test-Path $dockerfile) {
        Write-Success "–ù–∞–π–¥–µ–Ω $dockerfile"
        
        $content = Get-Content $dockerfile -Raw
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ multi-stage build
        if ($content -match "FROM.*AS") {
            Write-Success "  Multi-stage build –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
        } else {
            Write-Warning-Custom "  Multi-stage build –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ $dockerfile"
        }
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
        if ($content -match "HEALTHCHECK") {
            Write-Success "  Health check –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        } else {
            Write-Warning-Custom "  Health check –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ $dockerfile"
        }
    } else {
        Write-Error-Custom "–ù–µ –Ω–∞–π–¥–µ–Ω $dockerfile"
    }
}

# 6. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
Write-Host "`nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢" -ForegroundColor Blue
Write-Host "=================="

Write-Host "–ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: $Errors" -ForegroundColor $(if ($Errors -eq 0) { "Green" } else { "Red" })
Write-Host "–ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $Warnings" -ForegroundColor $(if ($Warnings -eq 0) { "Green" } else { "Yellow" })

if ($Errors -eq 0 -and $Warnings -eq 0) {
    Write-Host "`nüéâ –û–¢–õ–ò–ß–ù–û! –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É" -ForegroundColor Green
    exit 0
} elseif ($Errors -eq 0) {
    Write-Host "`n‚ö†Ô∏è  –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É —Å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏" -ForegroundColor Yellow
    exit 0
} else {
    Write-Host "`n‚ùå –ü—Ä–æ–µ–∫—Ç –ù–ï –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏" -ForegroundColor Red
    exit 1
}
