#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Cloud Platform –¥–ª—è ChartGenius
# –ü—Ä–æ–µ–∫—Ç: chartgenius-444017

set -e

PROJECT_ID="chartgenius-444017"
REGION="us-central1"

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Cloud Platform –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_ID"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ gcloud —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v gcloud &> /dev/null; then
    echo "‚ùå gcloud CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Google Cloud SDK."
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
echo "üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç $PROJECT_ID..."
gcloud config set project $PROJECT_ID

# –í–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API
echo "üîß –í–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API..."
gcloud services enable cloudbuild.googleapis.com
gcloud services enable run.googleapis.com
gcloud services enable secretmanager.googleapis.com
gcloud services enable firestore.googleapis.com
gcloud services enable logging.googleapis.com
gcloud services enable monitoring.googleapis.com

echo "‚úÖ API –≤–∫–ª—é—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"

# –°–æ–∑–¥–∞–µ–º Firestore –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –°–æ–∑–¥–∞–µ–º Firestore –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
if ! gcloud firestore databases describe --region=$REGION 2>/dev/null; then
    gcloud firestore databases create --region=$REGION
    echo "‚úÖ Firestore –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "‚ÑπÔ∏è Firestore –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–∞
create_secret() {
    local secret_name=$1
    local secret_description=$2
    
    if ! gcloud secrets describe $secret_name 2>/dev/null; then
        echo "üîê –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç $secret_name..."
        echo "PLACEHOLDER_VALUE" | gcloud secrets create $secret_name \
            --data-file=- \
            --labels=project=chartgenius,environment=production
        echo "‚úÖ –°–µ–∫—Ä–µ—Ç $secret_name —Å–æ–∑–¥–∞–Ω (—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è)"
    else
        echo "‚ÑπÔ∏è –°–µ–∫—Ä–µ—Ç $secret_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã
echo "üîê –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –≤ Secret Manager..."
create_secret "JWT_SECRET_KEY" "JWT secret key for authentication"
create_secret "TELEGRAM_BOT_TOKEN" "Telegram bot token"
create_secret "OPENAI_API_KEY" "OpenAI API key for analysis"
create_secret "CRYPTOCOMPARE_API_KEY" "CryptoCompare API key for market data"

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è GitHub Actions
echo "üë§ –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è CI/CD..."
SA_NAME="github-actions"
SA_EMAIL="$SA_NAME@$PROJECT_ID.iam.gserviceaccount.com"

if ! gcloud iam service-accounts describe $SA_EMAIL 2>/dev/null; then
    gcloud iam service-accounts create $SA_NAME \
        --display-name="GitHub Actions Service Account" \
        --description="Service account for GitHub Actions CI/CD"
    echo "‚úÖ –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ÑπÔ∏è –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É
echo "üîë –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É..."
gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/run.developer"

gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/cloudbuild.builds.builder"

gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/secretmanager.secretAccessor"

gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$SA_EMAIL" \
    --role="roles/storage.admin"

echo "‚úÖ –†–æ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –¥–ª—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
echo "üóùÔ∏è –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –¥–ª—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞..."
if [ ! -f "github-actions-key.json" ]; then
    gcloud iam service-accounts keys create github-actions-key.json \
        --iam-account=$SA_EMAIL
    echo "‚úÖ –ö–ª—é—á —Å–æ–∑–¥–∞–Ω: github-actions-key.json"
    echo "‚ö†Ô∏è –î–æ–±–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ GitHub Secrets –∫–∞–∫ GCP_SA_KEY"
else
    echo "‚ÑπÔ∏è –ö–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–µ–º Cloud Build —Ç—Ä–∏–≥–≥–µ—Ä (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
echo "üî® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cloud Build..."
echo "‚ÑπÔ∏è Cloud Build —Ç—Ä–∏–≥–≥–µ—Ä –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ GitHub Actions"

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Cloud Platform –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û–±–Ω–æ–≤–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ Secret Manager:"
echo "   - JWT_SECRET_KEY: gcloud secrets versions add JWT_SECRET_KEY --data-file=-"
echo "   - TELEGRAM_BOT_TOKEN: gcloud secrets versions add TELEGRAM_BOT_TOKEN --data-file=-"
echo "   - OPENAI_API_KEY: gcloud secrets versions add OPENAI_API_KEY --data-file=-"
echo "   - CRYPTOCOMPARE_API_KEY: gcloud secrets versions add CRYPTOCOMPARE_API_KEY --data-file=-"
echo ""
echo "2. –î–æ–±–∞–≤—å—Ç–µ –≤ GitHub Secrets:"
echo "   - GCP_PROJECT_ID: $PROJECT_ID"
echo "   - GCP_SA_KEY: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ github-actions-key.json"
echo ""
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Firestore –∫–æ–ª–ª–µ–∫—Ü–∏–∏:"
echo "   - users (–¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram)"
echo "   - subscriptions (–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏)"
echo "   - analyses (–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ —Å TTL 30 –¥–Ω–µ–π)"
echo ""
echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ GitHub Actions –∏–ª–∏ –≤—Ä—É—á–Ω—É—é"
echo ""
