#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è ChartGenius –≤ Google Cloud Run
# –ü—Ä–æ–µ–∫—Ç: chartgenius-444017

set -e

PROJECT_ID="chartgenius-444017"
REGION="us-central1"
COMMIT_SHA=$(git rev-parse --short HEAD)

echo "üöÄ –†—É—á–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ ChartGenius –≤ Google Cloud Run"
echo "üìã –ü—Ä–æ–µ–∫—Ç: $PROJECT_ID"
echo "üåç –†–µ–≥–∏–æ–Ω: $REGION"
echo "üîñ –ö–æ–º–º–∏—Ç: $COMMIT_SHA"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
gcloud config set project $PROJECT_ID

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞
deploy_service() {
    local service_name=$1
    local dockerfile_path=$2
    local service_port=$3
    local memory=$4
    local cpu=$5
    local max_instances=$6
    local secrets=$7
    local env_vars=$8
    
    echo ""
    echo "üî® –°–±–æ—Ä–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ $service_name..."
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
    echo "üì¶ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
    gcloud builds submit \
        --tag gcr.io/$PROJECT_ID/$service_name:$COMMIT_SHA \
        --dockerfile $dockerfile_path \
        .
    
    # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Cloud Run
    echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Cloud Run..."
    gcloud run deploy $service_name \
        --image gcr.io/$PROJECT_ID/$service_name:$COMMIT_SHA \
        --region $REGION \
        --platform managed \
        --allow-unauthenticated \
        --port $service_port \
        --memory $memory \
        --cpu $cpu \
        --max-instances $max_instances \
        $secrets \
        $env_vars
    
    echo "‚úÖ $service_name —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç —É—Å–ø–µ—à–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ–∫—Ä–µ—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤..."
required_secrets=("JWT_SECRET_KEY" "TELEGRAM_BOT_TOKEN" "OPENAI_API_KEY")
for secret in "${required_secrets[@]}"; do
    if ! gcloud secrets describe $secret >/dev/null 2>&1; then
        echo "‚ùå –°–µ–∫—Ä–µ—Ç $secret –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ scripts/setup_gcp.sh"
        exit 1
    fi
done
echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –Ω–∞–π–¥–µ–Ω—ã"

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Backend API
deploy_service \
    "chartgenius-api" \
    "backend/Dockerfile" \
    "8000" \
    "1Gi" \
    "1" \
    "10" \
    "--set-secrets=JWT_SECRET_KEY=JWT_SECRET_KEY:latest,TELEGRAM_BOT_TOKEN=TELEGRAM_BOT_TOKEN:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest,CRYPTOCOMPARE_API_KEY=CRYPTOCOMPARE_API_KEY:latest" \
    "--set-env-vars=LLM_PROVIDER=openai,DEFAULT_SYMBOL=BTCUSDT,LOCAL_TESTING=false"

# –ü–æ–ª—É—á–∞–µ–º URL API –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
API_URL=$(gcloud run services describe chartgenius-api --region=$REGION --format="value(status.url)")
echo "üì° API URL: $API_URL"

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Frontend
echo ""
echo "üî® –°–±–æ—Ä–∫–∞ Frontend —Å API URL..."
gcloud builds submit \
    --tag gcr.io/$PROJECT_ID/chartgenius-frontend:$COMMIT_SHA \
    --dockerfile frontend/Dockerfile \
    --build-arg VITE_API_URL=$API_URL \
    --build-arg VITE_TELEGRAM_BOT_USERNAME=Chart_Genius_bot \
    .

gcloud run deploy chartgenius-frontend \
    --image gcr.io/$PROJECT_ID/chartgenius-frontend:$COMMIT_SHA \
    --region $REGION \
    --platform managed \
    --allow-unauthenticated \
    --port 80 \
    --memory 512Mi \
    --cpu 1 \
    --max-instances 5

FRONTEND_URL=$(gcloud run services describe chartgenius-frontend --region=$REGION --format="value(status.url)")
echo "üåê Frontend URL: $FRONTEND_URL"

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram Bot
deploy_service \
    "chartgenius-bot" \
    "bot/Dockerfile" \
    "8080" \
    "512Mi" \
    "1" \
    "5" \
    "--set-secrets=JWT_SECRET_KEY=JWT_SECRET_KEY:latest,TELEGRAM_BOT_TOKEN=TELEGRAM_BOT_TOKEN:latest" \
    "--set-env-vars=API_URL=$API_URL,WEBAPP_URL=$FRONTEND_URL"

BOT_URL=$(gcloud run services describe chartgenius-bot --region=$REGION --format="value(status.url)")
echo "ü§ñ Bot URL: $BOT_URL"

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –°–≤–æ–¥–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"
echo "‚Ä¢ API:      $API_URL"
echo "‚Ä¢ Frontend: $FRONTEND_URL"
echo "‚Ä¢ Bot:      $BOT_URL"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –¥–ª—è Telegram –±–æ—Ç–∞:"
echo "   curl -X POST \"https://api.telegram.org/bot\$TELEGRAM_BOT_TOKEN/setWebhook\" \\"
echo "        -H \"Content-Type: application/json\" \\"
echo "        -d '{\"url\": \"$BOT_URL/\$TELEGRAM_BOT_TOKEN\"}'"
echo ""
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:"
echo "   curl -X POST \"https://api.telegram.org/bot\$TELEGRAM_BOT_TOKEN/setMyCommands\" \\"
echo "        -H \"Content-Type: application/json\" \\"
echo "        -d '{\"commands\": [{\"command\": \"start\", \"description\": \"–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\"}]}'"
echo ""
echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
echo "   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ $FRONTEND_URL"
echo "   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –≤ Telegram"
echo ""
