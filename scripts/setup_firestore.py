#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Firestore –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏ –∏–Ω–¥–µ–∫—Å–æ–≤
–ü—Ä–æ–µ–∫—Ç: chartgenius-444017
"""

import os
import sys
from datetime import datetime, timedelta
from google.cloud import firestore
from google.cloud.firestore import FieldFilter
import google.auth

def setup_firestore():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firestore –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏ –∏–Ω–¥–µ–∫—Å–æ–≤"""
    
    print("üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firestore –¥–ª—è ChartGenius...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Firestore
        credentials, project = google.auth.default()
        db = firestore.Client(credentials=credentials, project=project)
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firestore –ø—Ä–æ–µ–∫—Ç–∞ {project}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        setup_users_collection(db)
        setup_subscriptions_collection(db)
        setup_analyses_collection(db)
        
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firestore –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ TTL policy –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'analyses' –≤ Firebase Console")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Firestore")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Firestore: {e}")
        sys.exit(1)

def setup_users_collection(db):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("\nüë§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'users'...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sample_user = {
        'id': 123456789,
        'username': 'sample_user',
        'first_name': 'Sample',
        'last_name': 'User',
        'photo_url': '',
        'created_at': datetime.utcnow(),
        'last_login': datetime.utcnow(),
        'is_active': True
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    user_ref = db.collection('users').document('sample_user')
    if not user_ref.get().exists:
        user_ref.set(sample_user)
        print("‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'users'")
    else:
        print("‚ÑπÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è 'users' —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ")

def setup_subscriptions_collection(db):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫"""
    print("\nüí≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'subscriptions'...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    sample_subscription = {
        'telegram_id': '123456789',
        'subscription_level': 'premium',
        'created_at': datetime.utcnow(),
        'expires_at': datetime.utcnow() + timedelta(days=30),
        'is_active': True,
        'features': ['full_analysis', 'all_indicators', 'price_prediction', 'detailed_recommendations'],
        'analysis_count': 0,
        'analysis_limit': -1,  # -1 = –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
        'payment_info': {
            'last_payment': datetime.utcnow(),
            'payment_method': 'card',
            'amount': 29.99,
            'currency': 'USD'
        }
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    sub_ref = db.collection('subscriptions').document('123456789')
    if not sub_ref.get().exists:
        sub_ref.set(sample_subscription)
        print("‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'subscriptions'")
    else:
        print("‚ÑπÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è 'subscriptions' —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ")

def setup_analyses_collection(db):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–æ–≤"""
    print("\nüìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'analyses'...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞
    sample_analysis = {
        'id': 'analysis_123456789_1640995200',
        'telegram_id': '123456789',
        'symbol': 'BTCUSDT',
        'analysis_type': 'full',
        'created_at': datetime.utcnow(),
        'expires_at': datetime.utcnow() + timedelta(days=30),  # TTL
        'analysis_result': {
            'summary': '–í–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥ —Å —Å–∏–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',
            'trend_analysis': {
                'direction': '–í–æ—Å—Ö–æ–¥—è—â–∏–π',
                'strength': '–°–∏–ª—å–Ω—ã–π'
            },
            'recommendations': {
                'action': 'Long',
                'entry_price': 45000,
                'stop_loss': 43000,
                'take_profit': 48000
            }
        },
        'primary_analysis': {
            'trend': '–í–æ—Å—Ö–æ–¥—è—â–∏–π',
            'signal': 'Long',
            'risk_level': '–°—Ä–µ–¥–Ω–∏–π',
            'main_recommendation': '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç–∏–µ –¥–ª–∏–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏'
        },
        'metadata': {
            'interval': '4h',
            'limit': 100,
            'indicators_used': ['RSI', 'MACD', 'Bollinger_Bands'],
            'processing_time': 2.5
        }
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    analysis_ref = db.collection('analyses').document('sample_analysis')
    if not analysis_ref.get().exists:
        analysis_ref.set(sample_analysis)
        print("‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 'analyses'")
    else:
        print("‚ÑπÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è 'analyses' —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ")
    
    print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ TTL policy –¥–ª—è –ø–æ–ª—è 'expires_at' –≤ Firebase Console")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ Firebase Console")
    print("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Firestore Database")
    print("   3. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é 'analyses'")
    print("   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ TTL –¥–ª—è –ø–æ–ª—è 'expires_at'")

def create_indexes(db):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤"""
    print("\nüîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω–¥–µ–∫—Å–∞—Ö...")
    print("–°–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è:")
    print("1. subscriptions: telegram_id, expires_at")
    print("2. analyses: telegram_id, created_at (desc)")
    print("3. analyses: telegram_id, expires_at")
    print("\n–ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö –∏–ª–∏ —á–µ—Ä–µ–∑ Firebase Console")

def cleanup_sample_data(db):
    """–û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"""
    print("\nüßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        db.collection('users').document('sample_user').delete()
        db.collection('subscriptions').document('123456789').delete()
        db.collection('analyses').document('sample_analysis').delete()
        print("‚úÖ –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "--cleanup":
        # –†–µ–∂–∏–º –æ—á–∏—Å—Ç–∫–∏
        credentials, project = google.auth.default()
        db = firestore.Client(credentials=credentials, project=project)
        cleanup_sample_data(db)
    else:
        # –û–±—ã—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        setup_firestore()
