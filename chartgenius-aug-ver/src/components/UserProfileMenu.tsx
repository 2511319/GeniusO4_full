import { useEffect, useRef } from 'react';

interface UserProfileMenuProps {
  isOpen: boolean;
  onClose: () => void;
}

const UserProfileMenu: React.FC<UserProfileMenuProps> = ({ isOpen, onClose }) => {
  const menuRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
        onClose();
      }
    };

    if (isOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isOpen, onClose]);

  const handlePersonalCabinet = () => {
    console.log('–ü–µ—Ä–µ—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç');
    onClose();
  };

  const handleLogout = () => {
    console.log('–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div
      ref={menuRef}
      className="absolute right-0 top-full mt-2 w-48 bg-[#1e1e1e] border border-gray-700 rounded-lg shadow-lg z-50"
    >
      <div className="py-2">
        <button
          onClick={handlePersonalCabinet}
          className="w-full text-left px-4 py-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors flex items-center gap-2"
        >
          <span className="text-sm">üë§</span>
          –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç / –ü–æ–¥–ø–∏—Å–∫–∞
        </button>
        <hr className="border-gray-700 my-1" />
        <button
          onClick={handleLogout}
          className="w-full text-left px-4 py-2 text-gray-300 hover:bg-gray-700 hover:text-white transition-colors flex items-center gap-2"
        >
          <span className="text-sm">üö™</span>
          –í—ã—Ö–æ–¥
        </button>
      </div>
    </div>
  );
};

export default UserProfileMenu;
