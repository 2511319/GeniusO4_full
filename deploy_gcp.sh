#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è GeniusO4 –≤ Google Cloud Run

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ gcloud —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v gcloud &> /dev/null; then
    print_error "gcloud CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å https://cloud.google.com/sdk/docs/install"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç
PROJECT_ID=$(gcloud config get-value project 2>/dev/null)
if [ -z "$PROJECT_ID" ]; then
    print_error "–ü—Ä–æ–µ–∫—Ç GCP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: gcloud config set project YOUR_PROJECT_ID"
    exit 1
fi

print_status "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–µ–∫—Ç: $PROJECT_ID"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ API –≤–∫–ª—é—á–µ–Ω—ã
print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö API..."
gcloud services enable cloudbuild.googleapis.com
gcloud services enable run.googleapis.com
gcloud services enable secretmanager.googleapis.com

# –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤..."

create_secret_if_not_exists() {
    local secret_name=$1
    local secret_value=$2
    
    if ! gcloud secrets describe $secret_name &>/dev/null; then
        echo -n "$secret_value" | gcloud secrets create $secret_name --data-file=-
        print_success "–°–µ–∫—Ä–µ—Ç $secret_name —Å–æ–∑–¥–∞–Ω"
    else
        print_warning "–°–µ–∫—Ä–µ—Ç $secret_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
JWT_SECRET_KEY="34sSDF542rf65EJ1kj"
TELEGRAM_BOT_TOKEN="7279183061:AAERodVAje0VnifJmUJWeq0EM4FxMueXrB0"
OPENAI_API_KEY="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"
CRYPTOCOMPARE_API_KEY="4f09e9d732eab748157e44a138d88ac9b686ac373437ec5211910e02c14b7c15"

# –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã
create_secret_if_not_exists "JWT_SECRET_KEY" "$JWT_SECRET_KEY"
create_secret_if_not_exists "TELEGRAM_BOT_TOKEN" "$TELEGRAM_BOT_TOKEN"
create_secret_if_not_exists "OPENAI_API_KEY" "$OPENAI_API_KEY"
create_secret_if_not_exists "CRYPTOCOMPARE_API_KEY" "$CRYPTOCOMPARE_API_KEY"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
print_status "–ó–∞–ø—É—Å–∫ Cloud Build..."
gcloud builds submit --config cloudbuild.yaml .

print_success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"

# –ü–æ–ª—É—á–∞–µ–º URL —Å–µ—Ä–≤–∏—Å–æ–≤
print_status "–ü–æ–ª—É—á–µ–Ω–∏–µ URL —Å–µ—Ä–≤–∏—Å–æ–≤..."
API_URL=$(gcloud run services describe geniuso4-api --region=us-central1 --format="value(status.url)")
BOT_URL=$(gcloud run services describe geniuso4-bot --region=us-central1 --format="value(status.url)")
FRONTEND_URL=$(gcloud run services describe geniuso4-frontend --region=us-central1 --format="value(status.url)")

echo ""
print_success "üéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üìä Frontend: $FRONTEND_URL"
echo "üîß Backend API: $API_URL"
echo "ü§ñ Telegram Bot: $BOT_URL"
echo "üìö API Docs: $API_URL/docs"
echo ""
print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞..."
curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/setWebhook" \
  -H "Content-Type: application/json" \
  -d "{\"url\": \"$BOT_URL\"}"

echo ""
print_success "‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ $FRONTEND_URL –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"
